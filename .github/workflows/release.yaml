name: Release

on:
  push:
    branches:
      - develop
      - main
      - hotfix/v*
    paths-ignore:
      - '.gitignore'
      - '**/*.env'
      - '*.env'
      - '**/*.md'
      - '*.md'
      - '**/*.txt'
      - '*.txt'

permissions:
  id-token: write
  contents: write
  pull-requests: write

env:
  NODE_VERSION: '22'

jobs:
  release:
    name: Create Release for Node.js Project
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
          private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
          passphrase: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
          git_committer_name: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          git_committer_email: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

# Step to set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

# Step to install project dependencies using clean install
      - name: Install dependencies
        run: npm ci
# Step to build the project
      - name: Build the project
        run: npm run build
# Step to run semantic-release for versioning and changelog generation
      - name: Run Semantic Release
        id: semantic_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24.2.3
          extra_plugins: |
            conventional-changelog-conventionalcommits@v7.0.2
            @saithodev/semantic-release-backmerge
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
