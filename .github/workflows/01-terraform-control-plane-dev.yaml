on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read
  security-events: write
jobs:
  console_pipeline:
    runs-on: ubuntu-latest
    name: Docker pipeline - Console
    steps:
      - uses: actions/checkout@v4
      - uses: LerianStudio/midaz-github-actions-docker-pipeline@main
        with:
          app-name: 'midaz-console'
          argo-cd-sync: false
          aws-region: 'us-east-2'
          dockerfile-name: 'Dockerfile'
          k8s-manifest-repo-name: 'midaz-kubernetes-manifests'
          k8s-manifest-repo-url: 'github.com/LerianStudio/midaz-kubernetes-manifests.git'
          role-session-name: 'GITHUB-OIDC-ECR-SESSION'
          role-to-assume: ${{ secrets.AWS_GH_OICD_TERRAFORM_ROLE }}
          service-github-token: ${{ secrets.SERVICE_USER_TOKEN }}
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
  json_server_pipeline:
    runs-on: ubuntu-latest
    name: Docker pipeline - Json server
    steps:
      - uses: actions/checkout@v4
      - uses: LerianStudio/midaz-github-actions-docker-pipeline@main
        with:
          app-name: 'midaz-json-server'
          argo-cd-sync: false
          aws-region: 'us-east-2'
          dockerfile-name: 'Dockerfile-json-server'
          k8s-manifest-repo-name: 'midaz-kubernetes-manifests'
          k8s-manifest-repo-url: 'github.com/LerianStudio/midaz-kubernetes-manifests.git'
          role-session-name: 'GITHUB-OIDC-ECR-SESSION'
          role-to-assume: ${{ secrets.AWS_GH_OICD_TERRAFORM_ROLE }}
          service-github-token: ${{ secrets.SERVICE_USER_TOKEN }}
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}